var Webgl={_vertexShader:`attribute vec2 p;attribute vec4 s,d;attribute vec3 o;uniform vec2 ss;uniform mat3 pr;varying vec2 uv;void main(){float cos=cos(radians(o.z)),sin=sin(radians(o.z));vec2 ori=o.xy/s.zw,pos=(p-ori)*d.zw;pos=vec2(pos.x*cos-pos.y*sin,pos.x*sin+pos.y*cos),pos+=ori+d.xy,gl_Position=vec4((pr*vec3(pos,1)).xy,0,1),uv=vec2((p.x*s.z+s.x)/ss.x,(p.y*s.w+s.y)/ss.y);}`,_fragmentShader:`precision mediump float;uniform sampler2D u_texture;varying vec2 uv;void main(){gl_FragColor=texture2D(u_texture,uv);}`,_quad:[0,0,0,1,1,0,1,0,0,1,1,1],getContext:function(a){var b={antialias:!1},d=null;return d=a.getContext('webgl',b)||a.getContext('experimental-webgl',b),d&&d instanceof WebGLRenderingContext&&(this._setup(d),this.resize(d,a.width,a.height),this.clear(d),d)},resize:function(a,b,d){a._width=b,a._height=d,a.viewport(0,0,b,d);a.uniformMatrix3fv(a._uniform.pr.location,!1,[2/b,0,0,0,-2/d,0,-1,1,1])},clear:function(a,b){for(var d in b=b||[0,0,0,0],b[3]||(b[3]=1),b)b[d]/=255;a.clearColor(b[0],b[1],b[2],b[3]),a.clear(a.COLOR_BUFFER_BIT)},getTileset:function(a,b){var e=a.RGBA,f=a.RGBA,g=a.UNSIGNED_BYTE,j=a.createTexture();a.bindTexture(a.TEXTURE_2D,j),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texImage2D(a.TEXTURE_2D,0,e,f,g,b);var k=[image.width,image.height];return a.uniform2fv(a._uniform.ss.location,new Float32Array(k)),{width:image.width,height:image.height,texture:j}},setTileset:function(a,b){a._textureWidth=b.width,a._textureHeight=b.height;var d=[b.width,b.height];return a.uniform2fv(a._uniform.ss.location,new Float32Array(d)),a.bindTexture(a.TEXTURE_2D,b.texture)},drawSprites:function(a,b){var d={p:[],s:[],d:[],o:[]};for(var e in b)for(var f=b[e],g=0;g<this._quad.length;g++)d.p.push(this._quad[2*g],this._quad[2*g+1]),d.s.push(f.sx,f.sy,f.sw,f.sh),d.d.push(f.x,f.y,f.w,f.h),d.o.push(f.ox,f.oy,f.a);for(var e in d)this._fillBuffer(a,e,new Float32Array(d[e]));a.drawArrays(a.TRIANGLES,0,this._quad.length*b.length)},_setup:function(a){a._program=a.createProgram(),a.attachShader(a._program,this._compileShader(a,this._vertexShader,a.VERTEX_SHADER)),a.attachShader(a._program,this._compileShader(a,this._fragmentShader,a.FRAGMENT_SHADER)),a.linkProgram(a._program),a.useProgram(a._program),a.disable(a.DEPTH_TEST),a.enable(a.BLEND),a.blendFunc(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA),a._attrib={};var b=['p','s','d','o'],d=[2,4,4,3];for(var e in b)this._setAttrib(a,b[e],d[e]);a._uniform={};var f=['ss','pr'];for(var e in f)a._uniform[f[e]]={location:a.getUniformLocation(a._program,f[e])}},_setAttrib:function(a,b,d){a._attrib[b]={location:a.getAttribLocation(a._program,b),buffer:a.createBuffer()},a.enableVertexAttribArray(a._attrib[b].location),a.bindBuffer(a.ARRAY_BUFFER,a._attrib[b].buffer),a.vertexAttribPointer(a._attrib[b].location,d,a.FLOAT,!1,0,0)},_fillBuffer(a,b,d){a.bindBuffer(a.ARRAY_BUFFER,a._attrib[b].buffer),a.bufferData(a.ARRAY_BUFFER,d,a.STATIC_DRAW)},_compileShader:function(a,b,d){var e=a.createShader(d);return a.shaderSource(e,b),a.compileShader(e),e}};